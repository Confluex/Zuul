<?xml version="1.0" encoding="UTF-8"?>
<beans profile="security-ldap"
       xmlns="http://www.springframework.org/schema/beans"
       xmlns:s="http://www.springframework.org/schema/security"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
">

    <!--suppress SpringModelInspection -->
    <context:property-placeholder location="classpath:/ldap.properties" order="2" ignore-unresolvable="true"/>

    <bean id="ldapUserContextMapper" class="com.confluex.security.spring.LdapUserContextMapper">
        <constructor-arg>
            <map>
                <entry key="${ldap.dn.ROLE_SYSTEM_ADMIN}">
                    <list>
                        <value>ROLE_SYSTEM_ADMIN</value>
                    </list>
                </entry>
                <entry key="${ldap.dn.ROLE_ADMIN}">
                    <list>
                        <value>ROLE_ADMIN</value>
                    </list>
                </entry>
                <entry key="${ldap.dn.ROLE_USER}">
                    <list>
                        <value>ROLE_USER</value>
                    </list>
                </entry>
            </map>
        </constructor-arg>
    </bean>

    <s:ldap-server url="${ldap.url}" manager-dn="${ldap.username}" manager-password="${ldap.password}"/>

    <s:authentication-manager id="authenticationManager">
        <s:ldap-authentication-provider
                user-context-mapper-ref="ldapUserContextMapper"
                group-search-base="${ldap.group.search.base}"
                group-role-attribute="${ldap.group.role.attribute}"
                group-search-filter="${ldap.group.filter}"
                role-prefix="none"
                user-search-base="${ldap.user.search.base}"
                user-search-filter="${ldap.user.search.filter}"/>
    </s:authentication-manager>

    <s:http use-expressions="true" realm="Zuul Configuration Management"
            authentication-manager-ref="authenticationManager"
            access-decision-manager-ref="accessDecisionManager">
        <s:intercept-url pattern="/account/**" access="hasRole('ROLE_GUEST')"/>
        <s:intercept-url pattern="/settings/create**" access="hasRole('ROLE_ADMIN')"/>
        <s:intercept-url pattern="/settings/**/*.properties" access="permitAll" method="GET"/>
        <s:intercept-url pattern="/settings/**/*.json" access="permitAll" method="GET"/>
        <s:intercept-url pattern="/settings/**" access="hasRole('ROLE_USER')"/>
        <s:intercept-url pattern="/system/**" access="hasRole('ROLE_SYSTEM_ADMIN')"/>
        <s:intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')"/>
        <s:intercept-url pattern="/audit/**" access="hasRole('ROLE_ADMIN')"/>
        <s:intercept-url pattern="/**" access="permitAll"/>
        <s:form-login login-page="/login" authentication-failure-url="/login?login_error=authentication"/>
        <s:logout logout-url="/logout" logout-success-url="/"/>
    </s:http>

</beans>